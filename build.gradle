buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.kms.project'
version '1.0-SNAPSHIT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    annotationProcessor('org.projectlombok:lombok')
    implementation('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
//    스프링 부트 버전에 맞춰 자동으로 JPA 관련 라이브러들의 버전 관리
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
//    인메모리 관계형 데이터베이스
//    별도의 설치가 필요 없이 프로젝트 의존성만으로 관리
//    메모리에서 실행되기 때문에 애플리케이션을 재시작할 때마다 초기화된다는 점을 이용해 테스트 용도로 많이 사용
//    implementation('org.h2database:h2')
    implementation('com.h2database:h2')
    implementation('org.springframework.boot:spring-boot-starter-mustache')

//    스프링 시큐리티 설정
//    소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현 시 필요한 의존성
//    spring-security-oauth2-client와 spring-security-oauth2-jose를 기본적으로 관리
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
//    세션 관리용 db
    implementation('org.springframework.session:spring-session-jdbc')
//    테스트 시 인증되지 않은 사용자의 요청 처리
    implementation("org.springframework.security:spring-security-test")

    implementation("org.mariadb.jdbc:mariadb-java-client")
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


// lombok 테스트 시 생성자가 안만들어지고
// lombok error: variable name not initialized in the default constructor private final String name; 에러 발생
// 원인은 gradle 5부터는 어노테이션을 구별해서 추가해줘야한다고 함
//dependencies {
//    annotationProcessor 'org.projectlombok:lombok'
//    implementation 'org.projectlombok:lombok'
//    testAnnotationProcessor 'org.projectlombok:lombok'
//    testImplementation 'org.projectlombok:lombok'
//}
//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.example.springboot.Application'
        )
    }
}